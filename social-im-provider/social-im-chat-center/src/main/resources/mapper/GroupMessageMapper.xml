<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.enuos.live.mapper.GroupMessageMapper">

  <!--新增聊天记录-->
  <insert id="newGroupMessage" parameterType="com.enuos.live.pojo.GroupMessage"
    useGeneratedKeys="true" keyProperty="id">
    INSERT INTO group_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="sendId != null">
        send_id,
      </if>
      <if test="sendName != null and sendName != ''">
        send_name,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="messageId != null and messageId != ''">
        message_id,
      </if>
      <if test="messageSort != null">
        message_sort,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="messageEmojiUrl != null">
        message_emoji_url,
      </if>
      <if test="messageEmojiName != null">
        message_emoji_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="sendId != null">
        #{sendId,jdbcType=BIGINT},
      </if>
      <if test="sendName != null and sendName != ''">
        #{sendName,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null and messageId != ''">
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="messageSort != null">
        #{messageSort,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="messageEmojiUrl != null">
        #{messageEmojiUrl,jdbcType=VARCHAR},
      </if>
      <if test="messageEmojiName != null">
        #{messageEmojiName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <!--新增聊天记录-->
  <insert id="newGroupMessageBySort" parameterType="com.enuos.live.pojo.GroupMessage"
    useGeneratedKeys="true" keyProperty="id">
    INSERT INTO group_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="messageSort != null">
        message_sort,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="messageSort != null">
        #{messageSort,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <!--获得群聊聊天记录-->
  <select id="getGroupMessageList" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT t1.id                 AS recordId,
           t1.group_id           AS groupId,
           t1.send_id            AS userId,
           t1.message            AS message,
           t1.message_id         AS messageId,
           t1.message_sort       AS messageSort,
           t1.message_type       AS messageType,
           IFNULL(t2.action, 1)  AS isAction,
           t1.message_emoji_url  AS emojiUrl,
           t1.message_emoji_name AS emojiName,
           t1.create_time        AS createTime
      FROM group_message t1
      LEFT JOIN group_message_voice t2
        ON t1.group_id = t2.group_id
       AND t1.id = t2.record_id
       AND t2.user_id = #{userId,jdbcType=BIGINT}
    <where>
      <if test="groupId != null">
        AND t1.group_id = #{groupId,jdbcType=BIGINT}
      </if>
      <if test="indexTime != null and indexTime != '' ">
        AND t1.create_time >= #{indexTime,jdbcType=VARCHAR}
      </if>
    </where>
    ORDER BY create_time DESC
  </select>

  <delete id="deleteGroupMessage" parameterType="java.lang.Long">
    DELETE FROM group_message
     WHERE group_id = #{groupId,jdbcType=BIGINT}
  </delete>
</mapper>