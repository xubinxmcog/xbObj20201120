<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.enuos.live.mapper.NoticeMemberMapper">

  <!--新增软件通知-->
  <insert id="saveMemberNoticeList" parameterType="java.util.List" useGeneratedKeys="true"
    keyProperty="id">
    INSERT INTO notice_member (
      user_id,
      notice_type,
      content_no,
      content_title,
      content_intro,
      admin_id,
      admin_name
    ) VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userId},
      #{item.noticeType},
      #{item.contentNo},
      #{item.contentTitle},
      #{item.contentIntro},
      #{item.adminId},
      #{item.adminName})
    </foreach>
  </insert>

  <!--新增软件通知-->
  <insert id="saveGroupDissolveNotice" parameterType="java.util.List" useGeneratedKeys="true"
    keyProperty="id">
    INSERT INTO notice_member (
      user_id,
      notice_type,
      content_title,
      content_intro
    ) VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userId},
      #{item.noticeType},
      #{item.contentTitle},
      #{item.contentIntro})
    </foreach>
  </insert>

  <!--新增软件通知-->
  <insert id="saveMemberNotice" parameterType="com.enuos.live.pojo.NoticeMember"
    useGeneratedKeys="true" keyProperty="id">
    INSERT INTO notice_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="roomId != null">
        room_id
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="contentTitle != null">
        content_title,
      </if>
      <if test="contentIntro != null">
        content_intro,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=INTEGER},
      </if>
      <if test="contentTitle != null">
        #{contentTitle,jdbcType=VARCHAR},
      </if>
      <if test="contentIntro != null">
        #{contentIntro,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!--更新用户未读信息状态-->
  <update id="updateUnreadNotice" parameterType="java.lang.Long">
    UPDATE notice_member
       SET notice_read = 1
     WHERE user_id = #{userId,jdbcType=BIGINT}
  </update>

  <!--删除通知根据通知ID-->
  <delete id="deleteMemberNoticeById" parameterType="java.lang.Long">
    DELETE FROM notice_member
     WHERE id = #{noticeId,jdbcType=BIGINT}
  </delete>

  <!--获得未读数量-->
  <select id="getUnreadNum" parameterType="java.lang.Long" resultType="java.lang.Integer">
    SELECT COUNT(id)
      FROM notice_member
     WHERE user_id = #{userId,jdbcType=BIGINT}
       AND  notice_read = 0
  </select>

  <!--获取最后一条消息-->
  <select id="getLastMemberNoticeTitle" resultType="java.lang.String" parameterType="java.lang.Long">
    SELECT content_title
      FROM notice_member
     WHERE user_id = #{userId,jdbcType=BIGINT}
     ORDER BY create_time DESC LIMIT 1
  </select>

  <!--获得消息详情-->
  <select id="getNoticeMemberInfo" parameterType="java.lang.Long" resultType="com.enuos.live.pojo.NoticeMember">
    SELECT user_id       AS userId,
           room_id       AS roomId,
           notice_type   AS noticeType,
           notice_read   AS noticeRead,
           content_no    AS contentNo,
           content_title AS contentTitle,
           content_intro AS contentIntro,
           content_type  AS contentType,
           create_time   AS createTime
      FROM notice_member
     WHERE id = #{noticeId,jdbcType=BIGINT}
  </select>

  <!--获得软件通知列表-->
  <select id="memberNoticeList" resultType="java.util.Map" parameterType="java.lang.Long">
    SELECT id            AS noticeId,
           notice_type   AS noticeType,
           content_title AS contentTitle,
           content_intro AS contentIntro,
           create_time   AS createTime
     FROM notice_member
    WHERE user_id = #{userId,jdbcType=BIGINT}
    ORDER BY create_time DESC
  </select>

</mapper>