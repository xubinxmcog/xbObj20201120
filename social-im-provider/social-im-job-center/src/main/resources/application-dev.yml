#server
server:
  port: 7112
  undertow:
    direct-buffers: true
    io-threads: 4
    worker-threads: 160

#eureka
#eureka:
#  instance:
#    #启用ip注册
#    prefer-ip-address: true
#    instance-id: ${spring.cloud.client.ip-address}:${server.port}
#  client:
#    #是否注册到注册中心
#    register-with-eureka: true
#    #是否从注册中心获取注册信息
#    fetch-registry: true
#    #查询服务和注册服务与注册中心交互的地址，多个地址用,分割
#    service-url:
#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:7010/eureka/

#spring
spring:
  application:
    name: SOCIAL-IM-JOB
  security:
    user:
      name: nanjing7le
      password: enuos2020
  zipkin:
    base-url: http://localhost:9771
    sender:
      type: web
  sleuth:
    sampler:
      #采样100%
      probability: 1.0

  #druid相关配置
  datasource:
    #如果存在多个数据源 监控的时候可以通过名字来区分
    #name: mysql
    #连接到数据库的url
    url: jdbc:mysql://192.168.0.50:3306/social_db?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&serverTimezone=Hongkong
    #连接数据库的账号
    username: root
    #连接数据库的密码
    password: root
    #驱动类名称
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #配置druid
    druid:
      #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 10
      #最大连接池数量
      max-active: 40
      #最小连接池数量
      min-idle: 5
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #连接保持空闲而不被驱逐的最长时间
      min-evictable-idle-time-millis: 300000
      #用来检测连接是否有效的sql
      validation-query: SELECT 1 FROM DUAL
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis,执行validationQuery检测连接是否有效
      test-while-idle: true
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
      #是否缓存preparedStatement,即PSCache
      pool-prepared-statements: true
      #指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #filters: stat,wall,log4j
      #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      #合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 # 服务注册到nacos
    sentinel:
      transport:
        # 配置sentinel dashboard地址
        dashboard: localhost:8080
        port: 8719

  #redis
  redis:
    host: 192.168.0.50
    port: 6379
    password:
    timeout: 20000
    lettuce:
      pool:
        #最大连接数
        max-active: 1024
        #最大阻塞等待时间(负数表示没限制)
        max-wait: 20000
        #最大空闲
        max-idle: 200
        #最小空闲
        min-idle: 10

feign:
  httpclient:
    #是否启用httpclient
    enabled: false
    #请求连接超时时间（毫秒）
    connection-timeout: 3000
  okhttp:
    #是否启用http-ok（性能比httpclient高）
    enabled: true
  hystrix:
    #是否启用hystrix
    enabled: true

#日志
logging:
  level:
    com.enuos.live: info
  config: classpath:logback-spring.xml

#参数加解密
data:
  is-cipher: false